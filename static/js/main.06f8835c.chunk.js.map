{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actionTypes.js","redux/actions/contactsAction.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","redux/actions/filterAction.js","components/Filter/Filter.js","App.js","redux/redusers/contactsReducer.js","redux/redusers/filterReducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","actionTypes","deleteContact","Notification","className","style","wrapper","notif","ContactForm","state","name","phone","isExist","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","contacts","contact","id","uuidv4","find","elem","console","log","setTimeout","this","styles","form","onSubmit","onChange","placeholder","type","required","btn","Component","mapDispatchToProps","contactAction","connect","store","handleDelete","filter","showContacts","toLowerCase","includes","list","map","el","onClick","filterContacts","filterContact","filterAction","input","App","JSON","parse","localStorage","getItem","contactReducer","createReducer","action","addState","payload","setItem","stringify","deleteState","filterReducer","_","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06f8835c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Notification_wrapper__Uy_Qy\",\"notif\":\"Notification_notif__1XW0G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","const ADD_CONTACT = \"ADD_CONTACT\";\nconst DELETE_CONTACT = \"DELETE_CONTACT\";\nconst FILTER_CONTACTS = \"FILTER_CONTACTS\";\n\nexport default { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACTS };\n","// const addContact = (contact) => {\n//   return {\n//     type: \"ADD_CONTACT\",\n//     payload: { id: contact.id, name: contact.name, phone: contact.phone },\n//   };\n// };\n\n// const deleteContact = (id) => {\n//   return {\n//     type: \"DELETE_CONTACT\",\n//     payload: { id },\n//   };\n// };\n// export default { addContact, deleteContact };\n\nimport { createAction } from \"@reduxjs/toolkit\";\nimport actionTypes from \"../actionTypes\";\nconst addContact = createAction(actionTypes.ADD_CONTACT);\nconst deleteContact = createAction(actionTypes.DELETE_CONTACT);\n\nexport default { addContact, deleteContact };\n","import React from \"react\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = () => {\n  return (\n    <>\n      <div className={style.wrapper}>\n        <p className={style.notif}>Contact already exist</p>\n      </div>\n    </>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactAction from \"../../redux/actions/contactsAction\";\nimport Notification from \"../Notification/Notification\";\n\nclass ContactForm extends Component {\n  static propTypes = { addContact: PropTypes.func.isRequired };\n  state = {\n    name: \"\",\n    phone: \"\",\n    isExist: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, phone } = this.state;\n    const { contacts, addContact } = this.props;\n    const contact = {\n      id: uuidv4(),\n      name,\n      phone,\n    };\n    const condition = contacts.find((elem) => {\n      console.log(elem.name);\n      return elem.name === contact.name;\n    });\n\n    if (condition) {\n      this.setState({ isExist: true });\n      setTimeout(() => this.setState({ isExist: false }), 2000);\n      return;\n    }\n    addContact(contact);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone, isExist } = this.state;\n    const { handleSubmit, handleChange } = this;\n    return (\n      <>\n        {isExist && <Notification />}\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <input\n            onChange={handleChange}\n            placeholder=\"name\"\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            required\n          />\n          <input\n            onChange={handleChange}\n            placeholder=\"phone number\"\n            name=\"phone\"\n            type=\"tel\"\n            value={phone}\n            required\n          />\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  const { contacts } = store;\n  return { contacts };\n};\nconst mapDispatchToProps = { addContact: contactAction.addContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactAction from \"../../redux/actions/contactsAction\";\n\nconst ContactList = ({ showContacts, handleDelete }) => {\n  return (\n    <>\n      {showContacts && (\n        <ul className={styles.list}>\n          {showContacts.map((el) => {\n            return (\n              <li\n                onClick={() => {\n                  handleDelete(el.id);\n                }}\n                key={el.id}\n              >\n                {el.name}\n                <span>{el.phone}</span>\n                <button className={styles.btn} type=\"button\">\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  const { contacts, filter } = store;\n  const filteredContacts = contacts.filter((contact) => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n  return { showContacts: filteredContacts };\n};\nconst mapDispatchToProps = {\n  handleDelete: contactAction.deleteContact,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  showContacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      phone: PropTypes.string.isRequired,\n    })\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n","// const filterAction = (value) => {\n//   return {\n//     type: \"FILTER_CONTACT\",\n//     payload: value,\n//   };\n// };\n\n// export default { filterAction };\n\nimport { createAction } from \"@reduxjs/toolkit\";\nimport actionTypes from \"../actionTypes\";\nconst filterContacts = createAction(actionTypes.FILTER_CONTACTS);\n\nexport default { filterContacts };  \n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport filterAction from \"../../redux/actions/filterAction\";\n\nconst Filter = ({ filterContact }) => {\n  return (\n    <input\n      className={styles.input}\n      onChange={(event) => {\n        return filterContact(event.target.value);\n      }}\n      placeholder=\"Find contacts by name\"\n      name=\"filter\"\n      type=\"text\"\n    />\n  );\n};\n\nconst mapDispatchToProps = { filterContact: filterAction.filterContacts };\nexport default connect(null, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filterContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","// const contactReducer = (state = contacts, action) => {\n//   switch (action.type) {\n//     case \"ADD_CONTACT\":\n//       console.log(state);\n//       const addState = [...state, action.payload];\n//       localStorage.setItem(\"contacts\", JSON.stringify(addState));\n//       return addState;\n//     case \"DELETE_CONTACT\":\n//       const deleteState = state.filter(\n//         (contact) => contact.id !== action.payload.id\n//       );\n//       localStorage.setItem(\"contacts\", JSON.stringify(deleteState));\n\n//       return deleteState;\n\n//     default:\n//       return state;\n//   }\n// };\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactAction from \"../actions/contactsAction\";\n\nconst contacts = JSON.parse(localStorage.getItem(\"contacts\")) || [\n  { id: \"id-1\", name: \"Rosie Simpson\", phone: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", phone: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", phone: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", phone: \"227-91-26\" },\n];\n\nconst addContact = (state, action) => {\n  const addState = [...state, action.payload];\n  localStorage.setItem(\"contacts\", JSON.stringify(addState));\n  return addState;\n};\nconst deleteContact = (state, action) => {\n  const deleteState = state.filter((contact) => contact.id !== action.payload);\n  localStorage.setItem(\"contacts\", JSON.stringify(deleteState));\n\n  return deleteState;\n};\n\nconst contactReducer = createReducer(contacts, {\n  [contactAction.addContact]: addContact,\n  [contactAction.deleteContact]: deleteContact,\n});\n\nexport default contactReducer;\n","// const filterReducer = (state = \"\", action) => {\n//   switch (action.type) {\n//     case \"FILTER_CONTACT\":\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport filterAction from \"../actions/filterAction\";\n\nconst filterReducer = createReducer(\"\", {\n  [filterAction.filterContacts]: (_, action) => action.payload,\n});\nexport default filterReducer;\n\n\n","// import { createStore, combineReducers } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport contacts from \"./redusers/contactsReducer\";\nimport filter from \"./redusers/filterReducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts,\n    filter,\n  },\n});\n// const rootReducer = combineReducers({ contacts: contactReducer, filter: filterReducer });\n\n// const store = createStore(\n//   rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}